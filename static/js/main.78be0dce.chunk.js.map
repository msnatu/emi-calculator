{"version":3,"sources":["components/emi_table.js","components/home.js","components/car.js","components/menu.js","App.js","serviceWorker.js","index.js"],"names":["EmiTable","props","state","emi","emi_entries","prevProps","prevState","snapshot","this","setState","createEMIEntries","YearTableCell","withStyles","theme","head","backgroundColor","color","palette","common","black","fontFamily","fontSize","body","fontWeight","TableCell","MonthTableCell","Row","row","React","useState","open","setOpen","rowClass","counter","Fragment","TableRow","className","IconButton","aria-label","size","onClick","component","scope","year","align","principal","interest","balance","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Typography","gutterBottom","Table","TableHead","TableBody","month_wise","map","month","key","month_name","month_names","months","is_month_selected","tenure","monthly_ratio","int_rate","current_year","Date","getFullYear","yearly_emi","yearly_principal","yearly_interest","month_counter","getMonth","year_counter","p","paid_principal","parseFloat","toFixed","paid_interest","push","parseInt","Math","floor","round","PureComponent","useStyles","makeStyles","root","flexGrow","paper","padding","spacing","textAlign","text","secondary","Home","classes","loanAmt","setLoanAmt","loanAmtSliderSelected","setLoanAmtSliderSelected","intRate","setIntRate","monthSelected","setMonthSelected","tenureYear","setTenureYear","tenureMonth","setTenureMonth","selectedTenure","setSelectedTenure","setEmi","totalIntAmt","setTotalIntAmt","totalMoi","setTotalMoi","graphActiveIndex","setGraphActiveIndex","loan_amt_input_value","loan_amt_slider_value","muiTheme","createMuiTheme","overrides","MuiSlider","valuetext","value","handleLoanAmtChange","event","newValue","handleIntRateChange","handleTenureChange","handleInputChange","type","target","Number","formatCurrency","trunc","Intl","NumberFormat","currency","maximumFractionDigits","format","replace","useEffect","pow","emi_value","total_amt","calculateEMI","data","name","COLORS","emi_props","Grid","container","item","xs","md","loan_amount_marks","label","FormControl","fullWidth","variant","InputLabel","htmlFor","OutlinedInput","id","onChange","e","startAdornment","InputAdornment","position","labelWidth","ThemeProvider","Slider","valueLabelDisplay","getAriaValueText","aria-labelledby","step","min","max","marks","renderLoanAmount","interest_rate_marks","i","endAdornment","renderInterestRate","total_tenure","step_incr","slider_step","slider_max","tenure_value","tenure_label","loan_tenure_marks","ToggleButtonGroup","exclusive","ToggleButton","selected","renderTenure","justify","width","height","dataKey","onMouseEnter","obj","index","activeIndex","activeShape","RADIAN","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","d","stroke","r","overflow","labelLine","entry","length","Divider","Paper","Car","amount","defaultValue","handleChange","console","log","Component","TabPanel","children","other","role","hidden","a11yProps","background","TopMenu","setValue","AppBar","Tabs","scrollButtons","indicatorColor","textColor","centered","Tab","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.78be0dce.chunk.js","sourcesContent":["import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nclass EmiTable extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emi: props.emi\n    }\n    this.emi_entries = [];\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this.setState({\n      emi: this.props.emi\n    });\n    this.createEMIEntries();\n  }\n\n  render() {\n    const YearTableCell = withStyles((theme) => ({\n      head: {\n        backgroundColor: '#efbe00',\n        color: theme.palette.common.black,\n        fontFamily: 'Titillium Web, Roboto, sans-serif',\n        fontSize: 16,\n      },\n      body: {\n        fontSize: 14,\n        fontFamily: 'Titillium Web, Roboto, sans-serif',\n        fontWeight: 'bold'\n      },\n    }))(TableCell);\n\n    const MonthTableCell = withStyles((theme) => ({\n      head: {\n        backgroundColor: '#eee',\n        color: theme.palette.common.black,\n        fontFamily: 'Titillium Web, Roboto, sans-serif',\n        fontSize: 14,\n        fontWeight: 'bold'\n      },\n      body: {\n        fontSize: 14,\n        fontFamily: 'Titillium Web, Roboto, sans-serif',\n      },\n    }))(TableCell);\n\n    function Row(props) {\n      const {row} = props;\n      const [open, setOpen] = React.useState(false);\n      let rowClass = (props.counter % 2 === 0) ? 'emi-table-year-row' : 'emi-table-year-row-odd'\n\n      return (\n        <React.Fragment>\n          <TableRow className={rowClass}>\n            <YearTableCell>\n              <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n                {open ? <KeyboardArrowUpIcon/> : <KeyboardArrowDownIcon/>}\n              </IconButton>\n            </YearTableCell>\n            <YearTableCell component=\"th\" scope=\"row\">{row.year}</YearTableCell>\n            <YearTableCell align=\"right\">{row.principal}</YearTableCell>\n            <YearTableCell align=\"right\">{row.interest}</YearTableCell>\n            <YearTableCell align=\"right\">{row.emi}</YearTableCell>\n            <YearTableCell align=\"right\">{row.balance}</YearTableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell style={{paddingBottom: 0, paddingTop: 0}} colSpan={6}>\n              <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <Box margin={2}>\n                  <Typography gutterBottom component=\"div\">\n                    <Box fontWeight=\"fontWeightBold\">{row.year} Breakdown</Box>\n                  </Typography>\n                  <Table size=\"small\" aria-label=\"yearly-emi\">\n                    <TableHead>\n                      <TableRow>\n                        <MonthTableCell align=\"center\">Month</MonthTableCell>\n                        <MonthTableCell align=\"right\">Principal</MonthTableCell>\n                        <MonthTableCell align=\"right\">Interest</MonthTableCell>\n                        <MonthTableCell align=\"right\">EMI</MonthTableCell>\n                        <MonthTableCell align=\"right\">Balance</MonthTableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {row.month_wise.map((month) => (\n                        <TableRow key={month.month_name}>\n                          <MonthTableCell align=\"center\">{month.month_name}</MonthTableCell>\n                          <MonthTableCell align=\"right\">{month.principal}</MonthTableCell>\n                          <MonthTableCell align=\"right\">{month.interest}</MonthTableCell>\n                          <MonthTableCell align=\"right\">{month.emi}</MonthTableCell>\n                          <MonthTableCell align=\"right\">{month.balance}</MonthTableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </Box>\n              </Collapse>\n            </TableCell>\n          </TableRow>\n        </React.Fragment>\n      );\n    }\n\n    Row.propTypes = {\n      row: PropTypes.shape({\n        principal: PropTypes.number.isRequired,\n        interest: PropTypes.number.isRequired,\n        balance: PropTypes.number.isRequired,\n        emi: PropTypes.number.isRequired,\n        year: PropTypes.number.isRequired,\n        month_wise: PropTypes.array.isRequired\n      }).isRequired,\n    };\n\n    return (\n      <div>\n        <h2>EMI Table</h2>\n        <Table aria-label=\"collapsible table\" size=\"small\">\n          <TableHead>\n            <TableRow>\n              <YearTableCell/>\n              <YearTableCell>Year</YearTableCell>\n              <YearTableCell align=\"right\">Principal</YearTableCell>\n              <YearTableCell align=\"right\">Interest</YearTableCell>\n              <YearTableCell align=\"right\">EMI</YearTableCell>\n              <YearTableCell align=\"right\">Balance</YearTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.emi_entries.map((row, counter) => (\n              <Row key={row.year} row={row} counter={counter}/>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n\n  createEMIEntries() {\n    let month_names = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    let months = !this.props.is_month_selected ? (this.props.tenure * 12) : this.props.tenure;\n    let balance = null;\n    let total_months = 12;\n    let monthly_ratio = this.props.int_rate / total_months / 100;\n    let current_year = new Date().getFullYear();\n    let current_month = new Date().getMonth();\n    let yearly_emi = 0;\n    let yearly_principal = 0;\n    let yearly_interest = 0;\n    let month_counter = current_month;\n    let year_counter = 0;\n    let month_wise = [];\n    this.emi_entries = [];\n\n    for (let counter = 1; counter <= months; counter++) {\n      let p = !balance ? this.props.principal : balance;\n      let paid_principal = parseFloat(this.props.emi - (p * monthly_ratio)).toFixed(2);\n      let paid_interest = this.props.emi - paid_principal;\n      balance = parseFloat(p - paid_principal).toFixed(2);\n      month_wise.push({\n        principal: parseInt(paid_principal),\n        interest: parseInt(paid_interest),\n        balance: counter === months ? 0 : Math.floor(balance),\n        emi: Math.round(this.props.emi),\n        month_name: month_names[month_counter],\n      });\n\n      yearly_principal += parseInt(paid_principal);\n      yearly_interest += paid_interest;\n      yearly_emi += this.props.emi;\n\n      if (month_counter === 11) {\n        this.emi_entries.push({\n          principal: parseInt(yearly_principal),\n          interest: parseInt(yearly_interest),\n          balance: counter === months ? 0 : Math.floor(balance),\n          emi: Math.round(yearly_emi),\n          year: current_year + year_counter,\n          month_wise: month_wise\n        });\n        year_counter += 1;\n        month_counter = 0;\n        month_wise = [];\n      } else {\n        month_counter += 1;\n      }\n    }\n  }\n}\n\nEmiTable.propTypes = {};\n\nexport default EmiTable;","import React, {useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport './home.css'\nimport './emi_table'\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FormControl from '@material-ui/core/FormControl';\nimport Slider from '@material-ui/core/Slider';\nimport Divider from \"@material-ui/core/Divider\";\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport {PieChart, Pie, Cell, Sector} from 'recharts';\nimport {createMuiTheme} from '@material-ui/core/styles';\nimport {ThemeProvider} from '@material-ui/styles';\nimport EmiTable from \"./emi_table\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function Home() {\n  const classes = useStyles({});\n  const [loanAmt, setLoanAmt] = React.useState(1000000);\n  const [loanAmtSliderSelected, setLoanAmtSliderSelected] = React.useState(false);\n  const [intRate, setIntRate] = React.useState(8.8);\n  const [monthSelected, setMonthSelected] = React.useState(false);\n  const [tenureYear, setTenureYear] = React.useState(20);\n  const [tenureMonth, setTenureMonth] = React.useState(240);\n  const [selectedTenure, setSelectedTenure] = React.useState(tenureMonth);\n  const [emi, setEmi] = React.useState(0);\n  const [totalIntAmt, setTotalIntAmt] = React.useState(0);\n  const [totalMoi, setTotalMoi] = React.useState(0);\n  const [graphActiveIndex, setGraphActiveIndex] = React.useState(0);\n\n  let max_steps = 200;\n  let multiplier = 100000;\n  let loan_amt_input_value = loanAmtSliderSelected ? (loanAmt * multiplier) : loanAmt;\n  let loan_amt_slider_value = !loanAmtSliderSelected ? (loanAmt / multiplier) : loanAmt;\n\n  const muiTheme = createMuiTheme({\n    overrides: {\n      MuiSlider: {\n        root: {\n          color: '#FF8042'\n        }\n      }\n    }\n  });\n\n  function valuetext(value) {\n    return `${value}L`;\n  }\n\n  const handleLoanAmtChange = (event, newValue) => {\n    setLoanAmt(newValue);\n    setLoanAmtSliderSelected(true);\n  };\n\n  const handleIntRateChange = (event, newValue) => {\n    setIntRate(newValue);\n  };\n\n  const handleTenureChange = (event, newValue) => {\n    if (monthSelected) {\n      setTenureMonth(newValue);\n    } else {\n      setTenureYear(newValue);\n    }\n  };\n\n  const handleInputChange = (event, type) => {\n    let newValue = event.target.value === '' ? '' : Number(event.target.value);\n    if (type === 'loan_amt') {\n      setLoanAmt(newValue);\n      setLoanAmtSliderSelected(false);\n    } else if (type === 'int_rate') {\n      setIntRate(newValue);\n    } else if (type === 'tenure') {\n      if (monthSelected) {\n        setTenureMonth(newValue);\n      } else {\n        setTenureYear(newValue);\n      }\n    }\n  };\n\n  useEffect(() => {\n    calculateEMI();\n  });\n\n  function calculateEMI() {\n    let principal = loanAmtSliderSelected ? (loanAmt * multiplier) : loanAmt;\n    let months = monthSelected ? tenureMonth : (tenureYear * 12);\n    setSelectedTenure(months);\n    let monthly_ratio = intRate / 12 / 100;\n    let tenure = (Math.pow((1 + monthly_ratio), months)) / ((Math.pow((1 + monthly_ratio), months)) - 1);\n    let emi_value = principal * monthly_ratio * tenure;\n    setEmi(emi_value);\n    let total_amt = emi_value * months;\n    setTotalMoi(total_amt)\n    let int_amt = total_amt - principal;\n    setTotalIntAmt(int_amt);\n  }\n\n  function renderLoanAmount() {\n    const loan_amount_marks = [\n      {\n        value: 0,\n        label: '0',\n      },\n      {\n        value: 25,\n        label: '25L',\n      },\n      {\n        value: 50,\n        label: '50L',\n      },\n      {\n        value: 75,\n        label: '75L',\n      },\n      {\n        value: 100,\n        label: '1Cr',\n      },\n      {\n        value: 125,\n        label: '1.25Cr',\n      },\n      {\n        value: 150,\n        label: '1.50Cr',\n      },\n      {\n        value: 175,\n        label: '1.75Cr',\n      },\n      {\n        value: max_steps,\n        label: '2Cr',\n      }\n    ];\n    return <FormControl fullWidth className={classes.margin} variant=\"outlined\">\n      <InputLabel htmlFor=\"outlined-adornment-amount\">Loan Amount</InputLabel>\n      <OutlinedInput\n        className=\"home-loan-text-box\"\n        id=\"outlined-adornment-amount\"\n        value={loan_amt_input_value}\n        onChange={(e) => handleInputChange(e, 'loan_amt')}\n        startAdornment={<InputAdornment position=\"start\">&#8377;</InputAdornment>}\n        labelWidth={95}\n        margin={\"dense\"}\n      />\n      <ThemeProvider theme={muiTheme}>\n        <Slider valueLabelDisplay=\"auto\"\n                className=\"loan-slider\"\n                value={loan_amt_slider_value}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider-small-steps\"\n                step={0.5}\n                min={0}\n                max={max_steps}\n                marks={loan_amount_marks}\n                onChange={handleLoanAmtChange}\n        />\n      </ThemeProvider>\n\n      <br/>\n      <br/>\n    </FormControl>;\n  }\n\n  function renderInterestRate() {\n    let interest_rate_marks = [];\n    for (let i = 5; i <= 20; i = i + 2.5) {\n      interest_rate_marks.push({value: i, label: i + '%'})\n    }\n    return <FormControl fullWidth className={classes.margin} variant=\"outlined\">\n      <InputLabel htmlFor=\"outlined-adornment-interest-rate\">Interest Rate</InputLabel>\n      <OutlinedInput\n        className=\"home-loan-text-box\"\n        id=\"outlined-adornment-interest-rate\"\n        value={intRate}\n        onChange={(e) => handleInputChange(e, 'int_rate')}\n        endAdornment={<InputAdornment position=\"start\">%</InputAdornment>}\n        labelWidth={95}\n        margin={\"dense\"}\n      />\n      <ThemeProvider theme={muiTheme}>\n        <Slider\n          value={intRate}\n          onChange={handleIntRateChange}\n          getAriaValueText={valuetext}\n          aria-labelledby=\"discrete-slider-small-steps\"\n          step={0.1}\n          min={5}\n          max={20}\n          marks={interest_rate_marks}\n          valueLabelDisplay=\"auto\"\n        />\n      </ThemeProvider>\n      <br/>\n      <br/>\n    </FormControl>;\n  }\n\n  function renderTenure() {\n    let total_tenure = monthSelected ? 360 : 30;\n    let step_incr = monthSelected ? 60 : 5;\n    let slider_step = monthSelected ? 6 : 1;\n    let slider_max = monthSelected ? 360 : 30;\n    let tenure_value = monthSelected ? tenureMonth : tenureYear;\n    let tenure_label = monthSelected ? 'Mo' : 'Yr';\n    let loan_tenure_marks = [];\n    for (let i = 0; i <= total_tenure; i = i + step_incr) {\n      loan_tenure_marks.push({value: i, label: i});\n    }\n\n    return <FormControl fullWidth className={classes.margin} variant=\"outlined\">\n      <Grid container>\n        <Grid item xs={10}>\n          <InputLabel htmlFor=\"outlined-adornment-loan-tenure\">Loan Tenure</InputLabel>\n          <OutlinedInput\n            className=\"home-loan-text-box\"\n            id=\"outlined-adornment-loan-tenure\"\n            value={tenure_value}\n            onChange={(e) => handleInputChange(e, 'tenure')}\n            endAdornment={<InputAdornment position=\"start\">{tenure_label}</InputAdornment>}\n            labelWidth={95}\n            margin={\"dense\"}\n          />\n        </Grid>\n        <Grid item xs={2}>\n          <ToggleButtonGroup\n            value={\"center\"}\n            exclusive\n            size={\"small\"}\n            aria-label=\"text alignment\"\n            onChange={() => {\n              setMonthSelected(!monthSelected);\n            }}\n          >\n            <ToggleButton value=\"month\" selected={monthSelected}>Mo</ToggleButton>\n            <ToggleButton value=\"year\" selected={!monthSelected}>Yr</ToggleButton>\n          </ToggleButtonGroup>\n        </Grid>\n      </Grid>\n      <ThemeProvider theme={muiTheme}>\n        <Slider\n          value={tenure_value}\n          onChange={handleTenureChange}\n          getAriaValueText={valuetext}\n          aria-labelledby=\"discrete-slider-small-steps\"\n          step={slider_step}\n          min={0}\n          max={slider_max}\n          marks={loan_tenure_marks}\n          valueLabelDisplay=\"auto\"\n        />\n      </ThemeProvider>\n      <br/>\n      <br/>\n    </FormControl>;\n  }\n\n  function formatCurrency(value) {\n    value = Math.trunc(value);\n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n      maximumFractionDigits: 2\n    }).format(value).replace(/\\D00$/, '');\n  }\n\n  const data = [{name: 'Interest', value: totalIntAmt}, {name: 'Principal', value: loan_amt_input_value}];\n  const COLORS = ['#FFBB28', '#FF8042'];\n  const renderActiveShape = (props) => {\n    const RADIAN = Math.PI / 180;\n    const {\n      cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n      fill, payload, percent\n    } = props;\n    const sin = Math.sin(-RADIAN * midAngle);\n    const cos = Math.cos(-RADIAN * midAngle);\n    const sx = cx + (outerRadius + 10) * cos;\n    const sy = cy + (outerRadius + 10) * sin;\n    const mx = cx + (outerRadius + 30) * cos;\n    const my = cy + (outerRadius + 30) * sin;\n    const ex = mx + (cos >= 0 ? 1 : -1) * 30;\n    const ey = my;\n    const textAnchor = cos >= 0 ? 'start' : 'end';\n\n    return (\n      <g>\n        <text x={cx} y={cy} dy={-30} textAnchor=\"middle\" fontSize={18} fill=\"#999\" fontWeight='bold'>EMI</text>\n        <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fontSize={25} fontWeight='bold'>{formatCurrency(emi)}</text>\n        <Sector\n          cx={cx}\n          cy={cy}\n          innerRadius={innerRadius}\n          outerRadius={outerRadius}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          fill={fill}\n        />\n        <Sector\n          cx={cx}\n          cy={cy}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          innerRadius={outerRadius + 6}\n          outerRadius={outerRadius + 10}\n          fill={fill}\n        />\n        <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\"/>\n        <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\"/>\n        <text x={ex + (cos >= 0 ? 1 : -1) * 12} dy={ey - 18} textAnchor={textAnchor} fill=\"#999\" fontSize={12}\n              overflow='visible'>{payload.name}</text>\n        <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor}\n              fill=\"#333\">{`${(percent * 100).toFixed(2)}%`}</text>\n      </g>\n    );\n  };\n\n  function onPieEnter(obj, index) {\n    setGraphActiveIndex(index)\n  }\n\n  let emi_props = {\n    principal: loan_amt_input_value,\n    emi: emi,\n    int_rate: intRate,\n    is_month_selected: monthSelected,\n    tenure: monthSelected ? tenureMonth : tenureYear\n  };\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid container item xs={10}>\n          <Grid item className=\"home-loan-calc-widget-container\" md>\n            <h2>EMI Calculator for Home Loan</h2>\n            {renderLoanAmount()}\n            {renderInterestRate()}\n            {renderTenure()}\n            <EmiTable {...emi_props}/>\n          </Grid>\n\n          <Grid item className=\"home-loan-summary-container\" md>\n            <Grid container justify={\"center\"}>\n              <PieChart width={450} height={380}>\n                <Pie\n                  data={data}\n                  dataKey=\"value\"\n                  onMouseEnter={onPieEnter}\n                  activeIndex={graphActiveIndex}\n                  activeShape={renderActiveShape}\n                  labelLine={false}\n                  cy={196}\n                  startAngle={360}\n                  endAngle={0}\n                  innerRadius={80}\n                >\n                  {\n                    data.map((entry, index) => <Cell key={index} fill={COLORS[index % COLORS.length]}/>)\n                  }\n                </Pie>\n              </PieChart>\n\n            </Grid>\n            <Grid container className='loan-summary' justify={\"center\"}>\n              <Grid container justify={\"space-between\"}>\n                <Grid item>Principal</Grid>\n                <Grid item>{formatCurrency(loan_amt_input_value)}</Grid>\n              </Grid>\n              <Grid container justify={\"space-between\"}>\n                <Grid item>Total Interest</Grid>\n                <Grid item>{formatCurrency(totalIntAmt)}</Grid>\n              </Grid>\n              <Grid container justify={\"space-between\"}>\n                <Grid item>Total Duration</Grid>\n                <Grid item>{selectedTenure} mon / {selectedTenure / 12} year</Grid>\n              </Grid>\n              <Divider className='home-loan-divider'/>\n              <Grid container className='total-payment' justify={\"space-between\"}>\n                <Grid item>Total Payment</Grid>\n                <Grid item>{formatCurrency(totalMoi)}</Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item md>\n          <Paper className={classes.paper}>Ad</Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","import React, {Component} from 'react';\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Slider from \"@material-ui/core/Slider\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nclass Car extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      amount: 5000000\n    }\n  }\n\n  render() {\n\n    function valuetext(value) {\n      return `${value}L`;\n    }\n    const loan_amount_marks = [\n      {\n        value: 0,\n        label: '0',\n      },\n      {\n        value: 25,\n        label: '25L',\n      },\n      {\n        value: 50,\n        label: '50L',\n      },\n      {\n        value: 75,\n        label: '75L',\n      },\n      {\n        value: 100,\n        label: '1Cr',\n      },\n      {\n        value: 125,\n        label: '1.25Cr',\n      },\n      {\n        value: 150,\n        label: '1.50Cr',\n      },\n      {\n        value: 175,\n        label: '1.75Cr',\n      },\n      {\n        value: 200,\n        label: '2Cr',\n      }\n    ];\n\n    return (\n      <div>\n        <FormControl fullWidth variant=\"outlined\">\n          <InputLabel htmlFor=\"outlined-adornment-car-amount\">Loan Amount</InputLabel>\n          <OutlinedInput\n            className=\"home-loan-text-box\"\n            id=\"outlined-adornment-car-amount\"\n            value={this.state.amount}\n            onChange={(e) => this.handleInputChange(e)}\n            startAdornment={<InputAdornment position=\"start\">&#8377;</InputAdornment>}\n            labelWidth={95}\n            margin={\"dense\"}\n          />\n          <Slider\n            defaultValue={this.state.amount / 100000}\n            // value={this.state.amount / 100000}\n            getAriaValueText={valuetext}\n            aria-labelledby=\"discrete-slider-small-steps\"\n            step={1}\n            min={0}\n            max={200}\n            marks={loan_amount_marks}\n            onChange={(e) => this.handleChange(e)}\n            valueLabelDisplay=\"auto\"\n          />\n          <input\n            id=\"typeinp\"\n            type=\"range\"\n            min=\"0\" max=\"200\"\n            // value={this.state.amount/100000}\n            onChange={(e) => this.handleChange(e)}\n            step=\"1\"/>\n        </FormControl>\n      </div>\n    );\n  }\n\n  handleChange(e) {\n    console.log(e.target.value)\n    this.setState({amount: e.target.value*100000})\n  }\n\n  handleInputChange(e) {\n    console.log('input' + e.target.value)\n    this.setState({amount: e.target.value})\n  }\n}\n\nexport default Car;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Home from \"./home\";\nimport Car from \"./car\";\n\nfunction TabPanel(props) {\n  const {children, value, index, ...other} = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-force-tabpanel-${index}`}\n      aria-labelledby={`scrollable-force-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-force-tab-${index}`,\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function TopMenu() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          scrollButtons=\"on\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"loan calculators\"\n          centered\n        >\n          <Tab label=\"Home Loan\" {...a11yProps(0)}/>\n          <Tab label=\"Car Loan\" {...a11yProps(1)} />\n          <Tab label=\"Personal Loan\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <Home/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Car/>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        Item Three\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        Item Four\n      </TabPanel>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport TopMenu from './components/menu';\n\nfunction App() {\n  return (\n    <div>\n      <header className=\"App-header\">EMI Calculator</header>\n      <TopMenu/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}