{"version":3,"sources":["components/emi_table.js","components/emi_pie_chart.js","components/loan_summary.js","components/loan_form.js","components/home.js","components/car.js","components/personal.js","components/menu.js","App.js","serviceWorker.js","index.js"],"names":["EmiTable","props","state","emi","emi_entries","prevProps","prevState","snapshot","this","setState","createEMIEntries","value","Math","trunc","Intl","NumberFormat","style","currency","maximumFractionDigits","format","replace","self","YearTableCell","withStyles","theme","head","backgroundColor","color","palette","common","black","fontFamily","fontSize","body","fontWeight","TableCell","MonthTableCell","Row","row","React","useState","open","setOpen","rowClass","counter","Fragment","TableRow","className","IconButton","aria-label","size","onClick","component","scope","year","align","formatCurrency","principal","interest","balance","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Typography","gutterBottom","Table","TableHead","TableBody","month_wise","map","month","key","month_name","month_names","months","is_month_selected","tenure","monthly_ratio","int_rate","current_year","Date","getFullYear","yearly_emi","yearly_principal","yearly_interest","month_counter","getMonth","year_counter","yearly_values","p","paid_principal","parseFloat","toFixed","paid_interest","push","parseInt","floor","round","PureComponent","EmiPieChart","graphActiveIndex","setGraphActiveIndex","data","name","total_int_amt","COLORS","Grid","container","justify","width","height","dataKey","onMouseEnter","obj","index","activeIndex","activeShape","RADIAN","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","d","stroke","r","overflow","labelLine","entry","length","LoanSummary","item","tenure_months","Divider","total_moi","LoanForm","initial_principal","loanAmt","setLoanAmt","loanAmtSliderSelected","setLoanAmtSliderSelected","intRate","setIntRate","monthSelected","setMonthSelected","tenure_year","tenureYear","setTenureYear","tenure_month","tenureMonth","setTenureMonth","selectedTenure","setSelectedTenure","setEmi","totalIntAmt","setTotalIntAmt","totalMoi","setTotalMoi","loan_amt_input_value","multiplier","loan_amt_slider_value","classes","makeStyles","root","flexGrow","paper","padding","spacing","textAlign","text","secondary","useStyles","muiTheme","createMuiTheme","overrides","MuiSlider","valuetext","handleLoanAmtChange","event","newValue","handleIntRateChange","handleTenureChange","handleInputChange","type","target","Number","useEffect","pow","emi_value","total_amt","handler","loan_amt","selected_tenure","loan_amt_slider_selected","calculateEMI","FormControl","fullWidth","variant","InputLabel","htmlFor","OutlinedInput","id","loan_type","onChange","e","startAdornment","InputAdornment","position","labelWidth","ThemeProvider","Slider","valueLabelDisplay","getAriaValueText","aria-labelledby","step","min","max","max_steps","marks","interest_rate_marks","i","label","endAdornment","renderInterestRate","total_tenure","max_tenure","step_incr","tenure_steps_inc","slider_step","tenure_steps","tenure_value","tenure_label","loan_tenure_marks","xs","ToggleButtonGroup","exclusive","ToggleButton","selected","renderTenure","Home","emi_props","loan_form_props","md","Car","loan_amount_marks","Personal","TabPanel","children","other","role","hidden","a11yProps","background","TopMenu","setValue","AppBar","Tabs","scrollButtons","indicatorColor","textColor","centered","Tab","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.71ec68a0.chunk.js","sourcesContent":["import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nclass EmiTable extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emi: props.emi\n    }\n    this.emi_entries = [];\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this.setState({\n      emi: this.props.emi\n    });\n    this.createEMIEntries();\n  }\n\n  formatCurrency(value) {\n    value = Math.trunc(value);\n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n      maximumFractionDigits: 2\n    }).format(value).replace(/\\D00$/, '');\n  }\n\n  render() {\n    let self = this;\n    const YearTableCell = withStyles((theme) => ({\n      head: {\n        backgroundColor: '#efbe00',\n        color: theme.palette.common.black,\n        fontFamily: 'Titillium Web, Roboto, sans-serif',\n        fontSize: 16,\n      },\n      body: {\n        fontSize: 14,\n        fontFamily: 'Titillium Web, Roboto, sans-serif',\n        fontWeight: 'bold'\n      },\n    }))(TableCell);\n\n    const MonthTableCell = withStyles((theme) => ({\n      head: {\n        backgroundColor: '#eee',\n        color: theme.palette.common.black,\n        fontFamily: 'Titillium Web, Roboto, sans-serif',\n        fontSize: 14,\n        fontWeight: 'bold'\n      },\n      body: {\n        fontSize: 14,\n        fontFamily: 'Titillium Web, Roboto, sans-serif',\n      },\n    }))(TableCell);\n\n    function Row(props) {\n      const {row} = props;\n      const [open, setOpen] = React.useState(false);\n      let rowClass = (props.counter % 2 === 0) ? 'emi-table-year-row' : 'emi-table-year-row-odd'\n\n      return (\n        <React.Fragment>\n          <TableRow className={rowClass}>\n            <YearTableCell>\n              <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n                {open ? <KeyboardArrowUpIcon/> : <KeyboardArrowDownIcon/>}\n              </IconButton>\n            </YearTableCell>\n            <YearTableCell component=\"th\" scope=\"row\">{row.year}</YearTableCell>\n            <YearTableCell align=\"right\">{self.formatCurrency(row.principal)}</YearTableCell>\n            <YearTableCell align=\"right\">{self.formatCurrency(row.interest)}</YearTableCell>\n            <YearTableCell align=\"right\">{self.formatCurrency(row.emi)}</YearTableCell>\n            <YearTableCell align=\"right\">{self.formatCurrency(row.balance)}</YearTableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell style={{paddingBottom: 0, paddingTop: 0}} colSpan={6}>\n              <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <Box margin={2}>\n                  <Typography gutterBottom component=\"div\">\n                    <Box fontWeight=\"fontWeightBold\">{row.year} Breakdown</Box>\n                  </Typography>\n                  <Table size=\"small\" aria-label=\"yearly-emi\">\n                    <TableHead>\n                      <TableRow>\n                        <MonthTableCell align=\"center\">Month</MonthTableCell>\n                        <MonthTableCell align=\"right\">Principal</MonthTableCell>\n                        <MonthTableCell align=\"right\">Interest</MonthTableCell>\n                        <MonthTableCell align=\"right\">EMI</MonthTableCell>\n                        <MonthTableCell align=\"right\">Balance</MonthTableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {row.month_wise.map((month) => (\n                        <TableRow key={month.month_name}>\n                          <MonthTableCell align=\"center\">{month.month_name}</MonthTableCell>\n                          <MonthTableCell align=\"right\">{self.formatCurrency(month.principal)}</MonthTableCell>\n                          <MonthTableCell align=\"right\">{self.formatCurrency(month.interest)}</MonthTableCell>\n                          <MonthTableCell align=\"right\">{self.formatCurrency(month.emi)}</MonthTableCell>\n                          <MonthTableCell align=\"right\">{self.formatCurrency(month.balance)}</MonthTableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </Box>\n              </Collapse>\n            </TableCell>\n          </TableRow>\n        </React.Fragment>\n      );\n    }\n\n    Row.propTypes = {\n      row: PropTypes.shape({\n        principal: PropTypes.number.isRequired,\n        interest: PropTypes.number.isRequired,\n        balance: PropTypes.number.isRequired,\n        emi: PropTypes.number.isRequired,\n        year: PropTypes.number.isRequired,\n        month_wise: PropTypes.array.isRequired\n      }).isRequired,\n    };\n\n    return (\n      <div>\n        <h2>EMI Table</h2>\n        <Table aria-label=\"collapsible table\" size=\"small\">\n          <TableHead>\n            <TableRow>\n              <YearTableCell/>\n              <YearTableCell>Year</YearTableCell>\n              <YearTableCell align=\"right\">Principal</YearTableCell>\n              <YearTableCell align=\"right\">Interest</YearTableCell>\n              <YearTableCell align=\"right\">EMI</YearTableCell>\n              <YearTableCell align=\"right\">Balance</YearTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.emi_entries.map((row, counter) => (\n              <Row key={row.year} row={row} counter={counter}/>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n\n  createEMIEntries() {\n    let month_names = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    let months = !this.props.is_month_selected ? (this.props.tenure * 12) : this.props.tenure;\n    let balance = null;\n    let total_months = 12;\n    let monthly_ratio = this.props.int_rate / total_months / 100;\n    let current_year = new Date().getFullYear();\n    let current_month = new Date().getMonth();\n    let yearly_emi = 0;\n    let yearly_principal = 0;\n    let yearly_interest = 0;\n    let month_counter = current_month;\n    let year_counter = 0;\n    let month_wise = [];\n    this.emi_entries = [];\n    let yearly_values = null;\n\n    for (let counter = 1; counter <= months; counter++) {\n      let p = !balance ? this.props.principal : balance;\n      let paid_principal = parseFloat(this.props.emi - (p * monthly_ratio)).toFixed(2);\n      let paid_interest = this.props.emi - paid_principal;\n      balance = parseFloat(p - paid_principal).toFixed(2);\n      month_wise.push({\n        principal: parseInt(paid_principal),\n        interest: parseInt(paid_interest),\n        balance: counter === months ? 0 : Math.floor(balance),\n        emi: Math.round(this.props.emi),\n        month_name: month_names[month_counter],\n      });\n\n      yearly_principal += parseInt(paid_principal);\n      yearly_interest += paid_interest;\n      yearly_emi += this.props.emi;\n      yearly_values = {\n        principal: parseInt(yearly_principal),\n        interest: parseInt(yearly_interest),\n        balance: counter === months ? 0 : Math.floor(balance),\n        emi: Math.round(yearly_emi),\n        year: current_year + year_counter,\n        month_wise: month_wise\n      };\n\n      if (month_counter === 11) {\n        this.emi_entries.push(yearly_values);\n        year_counter += 1;\n        month_counter = 0;\n        month_wise = [];\n        yearly_values = null;\n      } else {\n        month_counter += 1;\n      }\n    }\n    if (yearly_values) {\n      this.emi_entries.push(yearly_values);\n    }\n  }\n}\n\nEmiTable.propTypes = {};\n\nexport default EmiTable;","import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport {Cell, Pie, PieChart, Sector} from \"recharts\";\n\nexport default function EmiPieChart(props) {\n  const [graphActiveIndex, setGraphActiveIndex] = React.useState(0);\n  const emi = props.emi;\n  const data = [{name: 'Interest', value: props.total_int_amt}, {name: 'Principal', value: props.principal}];\n  const COLORS = ['#FFBB28', '#FF8042'];\n\n  function formatCurrency(value) {\n    value = Math.trunc(value);\n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n      maximumFractionDigits: 2\n    }).format(value).replace(/\\D00$/, '');\n  }\n\n  const renderActiveShape = (props) => {\n    const RADIAN = Math.PI / 180;\n    const {\n      cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n      fill, payload, percent\n    } = props;\n    const sin = Math.sin(-RADIAN * midAngle);\n    const cos = Math.cos(-RADIAN * midAngle);\n    const sx = cx + (outerRadius + 10) * cos;\n    const sy = cy + (outerRadius + 10) * sin;\n    const mx = cx + (outerRadius + 30) * cos;\n    const my = cy + (outerRadius + 30) * sin;\n    const ex = mx + (cos >= 0 ? 1 : -1) * 30;\n    const ey = my;\n    const textAnchor = cos >= 0 ? 'start' : 'end';\n\n    return (\n      <g>\n        <text x={cx} y={cy} dy={-30} textAnchor=\"middle\" fontSize={18} fill=\"#999\" fontWeight='bold'>EMI</text>\n        <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fontSize={25} fontWeight='bold'>{formatCurrency(emi)}</text>\n        <Sector\n          cx={cx}\n          cy={cy}\n          innerRadius={innerRadius}\n          outerRadius={outerRadius}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          fill={fill}\n        />\n        <Sector\n          cx={cx}\n          cy={cy}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          innerRadius={outerRadius + 6}\n          outerRadius={outerRadius + 10}\n          fill={fill}\n        />\n        <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\"/>\n        <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\"/>\n        <text x={ex + (cos >= 0 ? 1 : -1) * 12} dy={ey - 18} textAnchor={textAnchor} fill=\"#999\" fontSize={12}\n              overflow='visible'>{payload.name}</text>\n        <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor}\n              fill=\"#333\">{`${(percent * 100).toFixed(2)}%`}</text>\n      </g>\n    );\n  };\n\n  function onPieEnter(obj, index) {\n    setGraphActiveIndex(index)\n  }\n\n  return (\n    <div>\n      <Grid container justify={\"center\"}>\n        <PieChart width={450} height={380}>\n          <Pie\n            data={data}\n            dataKey=\"value\"\n            onMouseEnter={onPieEnter}\n            activeIndex={graphActiveIndex}\n            activeShape={renderActiveShape}\n            labelLine={false}\n            cy={196}\n            startAngle={360}\n            endAngle={0}\n            innerRadius={80}\n          >\n            {\n              data.map((entry, index) => <Cell key={index} fill={COLORS[index % COLORS.length]}/>)\n            }\n          </Pie>\n        </PieChart>\n\n      </Grid>\n\n    </div>\n  );\n}\n","import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\n\nexport default function LoanSummary(props) {\n\n  function formatCurrency(value) {\n    value = Math.trunc(value);\n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n      maximumFractionDigits: 2\n    }).format(value).replace(/\\D00$/, '');\n  }\n\n  return (\n    <div>\n      <Grid container className='loan-summary' justify={\"center\"}>\n        <Grid container justify={\"space-between\"}>\n          <Grid item>Principal</Grid>\n          <Grid item>{formatCurrency(props.principal)}</Grid>\n        </Grid>\n        <Grid container justify={\"space-between\"}>\n          <Grid item>Total Interest</Grid>\n          <Grid item>{formatCurrency(props.total_int_amt)}</Grid>\n        </Grid>\n        <Grid container justify={\"space-between\"}>\n          <Grid item>Total Duration</Grid>\n          <Grid item>{props.tenure_months} mon / {props.tenure_months / 12} year</Grid>\n        </Grid>\n        <Divider className='home-loan-divider'/>\n        <Grid container className='total-payment' justify={\"space-between\"}>\n          <Grid item>Total Payment</Grid>\n          <Grid item>{formatCurrency(props.total_moi)}</Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, {useEffect} from 'react';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport {ThemeProvider} from \"@material-ui/styles\";\nimport Slider from \"@material-ui/core/Slider\";\nimport {createMuiTheme, makeStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\n\nexport default function LoanForm(props) {\n  const [loanAmt, setLoanAmt] = React.useState(props.initial_principal);\n  const [loanAmtSliderSelected, setLoanAmtSliderSelected] = React.useState(false);\n  const [intRate, setIntRate] = React.useState(props.int_rate);\n  const [monthSelected, setMonthSelected] = React.useState(false);\n  const [tenureYear, setTenureYear] = React.useState(props.tenure_year);\n  const [tenureMonth, setTenureMonth] = React.useState(props.tenure_month);\n  const [selectedTenure, setSelectedTenure] = React.useState(tenureMonth);\n  const [emi, setEmi] = React.useState(0);\n  const [totalIntAmt, setTotalIntAmt] = React.useState(0);\n  const [totalMoi, setTotalMoi] = React.useState(0);\n\n  let loan_amt_input_value = loanAmtSliderSelected ? (loanAmt * props.multiplier) : loanAmt;\n  let loan_amt_slider_value = !loanAmtSliderSelected ? (loanAmt / props.multiplier) : loanAmt;\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }));\n  const classes = useStyles({});\n\n  const muiTheme = createMuiTheme({\n    overrides: {\n      MuiSlider: {\n        root: {\n          color: '#FF8042'\n        }\n      }\n    }\n  });\n\n  function valuetext(value) {\n    return `${value}L`;\n  }\n\n  const handleLoanAmtChange = (event, newValue) => {\n    setLoanAmt(newValue);\n    setLoanAmtSliderSelected(true);\n  };\n\n  const handleIntRateChange = (event, newValue) => {\n    setIntRate(newValue);\n  };\n\n  const handleTenureChange = (event, newValue) => {\n    if (monthSelected) {\n      setTenureMonth(newValue);\n    } else {\n      setTenureYear(newValue);\n      setTenureMonth(newValue * 12);\n    }\n  };\n\n  const handleInputChange = (event, type) => {\n    let newValue = event.target.value === '' ? '' : Number(event.target.value);\n    if (type === 'loan_amt') {\n      setLoanAmt(newValue);\n      setLoanAmtSliderSelected(false);\n    } else if (type === 'int_rate') {\n      setIntRate(newValue);\n    } else if (type === 'tenure') {\n      if (monthSelected) {\n        setTenureMonth(newValue);\n      } else {\n        setTenureYear(newValue);\n        setTenureMonth(newValue * 12);\n      }\n    }\n  };\n\n  useEffect(() => {\n    calculateEMI();\n  });\n\n  function calculateEMI() {\n    let principal = loanAmtSliderSelected ? (loanAmt * props.multiplier) : loanAmt;\n    let months = monthSelected ? tenureMonth : (tenureYear * 12);\n    setSelectedTenure(months);\n    let monthly_ratio = intRate / 12 / 100;\n    let tenure = (Math.pow((1 + monthly_ratio), months)) / ((Math.pow((1 + monthly_ratio), months)) - 1);\n    let emi_value = principal * monthly_ratio * tenure;\n    setEmi(emi_value);\n    let total_amt = emi_value * months;\n    setTotalMoi(total_amt)\n    let int_amt = total_amt - principal;\n    setTotalIntAmt(int_amt);\n    props.handler({\n      loan_amt: loanAmt,\n      int_rate: intRate,\n      emi: emi,\n      total_moi: totalMoi,\n      total_int_amt: totalIntAmt,\n      selected_tenure: selectedTenure,\n      is_month_selected: monthSelected,\n      tenure_year: tenureYear,\n      tenure_month: tenureMonth,\n      loan_amt_slider_selected: loanAmtSliderSelected\n    })\n  }\n\n  function renderLoanAmount() {\n    return <FormControl fullWidth className={classes.margin} variant=\"outlined\">\n      <InputLabel htmlFor=\"outlined-adornment-amount\">Loan Amount</InputLabel>\n      <OutlinedInput\n        className=\"home-loan-text-box\"\n        id={props.loan_type + '-loan-amount'}\n        value={loan_amt_input_value}\n        onChange={(e) => handleInputChange(e, 'loan_amt')}\n        startAdornment={<InputAdornment position=\"start\">&#8377;</InputAdornment>}\n        labelWidth={95}\n        margin={\"dense\"}\n      />\n      <ThemeProvider theme={muiTheme}>\n        <Slider valueLabelDisplay=\"auto\"\n                className=\"loan-slider\"\n                value={loan_amt_slider_value}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider-small-steps\"\n                step={0.5}\n                min={0}\n                max={props.max_steps}\n                marks={props.marks}\n                onChange={handleLoanAmtChange}\n        />\n      </ThemeProvider>\n\n      <br/>\n      <br/>\n    </FormControl>;\n  }\n\n  function renderInterestRate() {\n    let interest_rate_marks = [];\n    for (let i = 5; i <= 20; i = i + 2.5) {\n      interest_rate_marks.push({value: i, label: i + '%'})\n    }\n    return <FormControl fullWidth className={classes.margin} variant=\"outlined\">\n      <InputLabel htmlFor=\"outlined-adornment-interest-rate\">Interest Rate</InputLabel>\n      <OutlinedInput\n        className=\"home-loan-text-box\"\n        id={props.loan_type + '-interest-rate'}\n        value={intRate}\n        onChange={(e) => handleInputChange(e, 'int_rate')}\n        endAdornment={<InputAdornment position=\"start\">%</InputAdornment>}\n        labelWidth={95}\n        margin={\"dense\"}\n      />\n      <ThemeProvider theme={muiTheme}>\n        <Slider\n          value={intRate}\n          onChange={handleIntRateChange}\n          getAriaValueText={valuetext}\n          aria-labelledby=\"discrete-slider-small-steps\"\n          step={0.1}\n          min={5}\n          max={20}\n          marks={interest_rate_marks}\n          valueLabelDisplay=\"auto\"\n        />\n      </ThemeProvider>\n      <br/>\n      <br/>\n    </FormControl>;\n  }\n\n  function renderTenure() {\n    let total_tenure = monthSelected ? (props.max_tenure * 12) : props.max_tenure;\n    let step_incr = monthSelected ? (props.tenure_steps_inc * 12) : props.tenure_steps_inc;\n    let slider_step = monthSelected ? props.tenure_steps[0] : props.tenure_steps[1];\n    let tenure_value = monthSelected ? tenureMonth : tenureYear;\n    let tenure_label = monthSelected ? 'Mo' : 'Yr';\n    let loan_tenure_marks = [];\n    for (let i = 0; i <= total_tenure; i = i + step_incr) {\n      loan_tenure_marks.push({value: i, label: i});\n    }\n\n    return <FormControl fullWidth className={classes.margin} variant=\"outlined\">\n      <Grid container>\n        <Grid item xs={10}>\n          <InputLabel htmlFor=\"outlined-adornment-loan-tenure\">Loan Tenure</InputLabel>\n          <OutlinedInput\n            className=\"home-loan-text-box\"\n            id={props.loan_type + '-loan-tenure'}\n            value={tenure_value}\n            onChange={(e) => handleInputChange(e, 'tenure')}\n            endAdornment={<InputAdornment position=\"start\">{tenure_label}</InputAdornment>}\n            labelWidth={95}\n            margin={\"dense\"}\n          />\n        </Grid>\n        <Grid item xs={2}>\n          <ToggleButtonGroup\n            value={\"center\"}\n            exclusive\n            size={\"small\"}\n            aria-label=\"text alignment\"\n            onChange={() => {\n              setMonthSelected(!monthSelected);\n            }}\n          >\n            <ToggleButton value=\"month\" selected={monthSelected}>Mo</ToggleButton>\n            <ToggleButton value=\"year\" selected={!monthSelected}>Yr</ToggleButton>\n          </ToggleButtonGroup>\n        </Grid>\n      </Grid>\n      <ThemeProvider theme={muiTheme}>\n        <Slider\n          value={tenure_value}\n          onChange={handleTenureChange}\n          getAriaValueText={valuetext}\n          aria-labelledby=\"discrete-slider-small-steps\"\n          step={slider_step}\n          min={0}\n          max={total_tenure}\n          marks={loan_tenure_marks}\n          valueLabelDisplay=\"auto\"\n        />\n      </ThemeProvider>\n      <br/>\n      <br/>\n    </FormControl>;\n  }\n\n  return (\n    <div>\n      {renderLoanAmount()}\n      {renderInterestRate()}\n      {renderTenure()}\n    </div>\n  );\n}\n","import React from 'react';\nimport './home.css'\nimport './emi_table'\nimport Grid from '@material-ui/core/Grid';\nimport EmiTable from \"./emi_table\";\nimport EmiPieChart from \"./emi_pie_chart\";\nimport LoanSummary from \"./loan_summary\";\nimport LoanForm from \"./loan_form\";\n\nexport default function Home() {\n  const [loanAmt, setLoanAmt] = React.useState(1000000);\n  const [loanAmtSliderSelected, setLoanAmtSliderSelected] = React.useState(false);\n  const [intRate, setIntRate] = React.useState(8.8);\n  const [monthSelected, setMonthSelected] = React.useState(false);\n  const [tenureYear, setTenureYear] = React.useState(20);\n  const [tenureMonth, setTenureMonth] = React.useState(240);\n  const [selectedTenure, setSelectedTenure] = React.useState(tenureMonth);\n  const [emi, setEmi] = React.useState(0);\n  const [totalIntAmt, setTotalIntAmt] = React.useState(0);\n  const [totalMoi, setTotalMoi] = React.useState(0);\n\n  let max_steps = 200;\n  let multiplier = 100000;\n  let loan_amt_input_value = loanAmtSliderSelected ? (loanAmt * multiplier) : loanAmt;\n  const loan_amount_marks = [\n    {\n      value: 0,\n      label: '0',\n    },\n    {\n      value: 25,\n      label: '25L',\n    },\n    {\n      value: 50,\n      label: '50L',\n    },\n    {\n      value: 75,\n      label: '75L',\n    },\n    {\n      value: 100,\n      label: '1Cr',\n    },\n    {\n      value: 125,\n      label: '1.25Cr',\n    },\n    {\n      value: 150,\n      label: '1.50Cr',\n    },\n    {\n      value: 175,\n      label: '1.75Cr',\n    },\n    {\n      value: max_steps,\n      label: '2Cr',\n    }\n  ];\n\n  let emi_props = {\n    principal: loan_amt_input_value,\n    emi: emi,\n    int_rate: intRate,\n    is_month_selected: monthSelected,\n    tenure: monthSelected ? tenureMonth : tenureYear,\n    tenure_months: selectedTenure,\n    total_int_amt: totalIntAmt,\n    total_moi: totalMoi\n  };\n\n  let loan_form_props = {\n    loan_type: 'home',\n    marks: loan_amount_marks,\n    max_steps: max_steps,\n    initial_principal: loanAmt,\n    int_rate: intRate,\n    multiplier: multiplier,\n    tenure_year: tenureYear,\n    tenure_months: tenureMonth,\n    max_tenure: 30,\n    tenure_steps: [6, 1],\n    tenure_steps_inc: 5\n  };\n\n  function handleFormChange(state) {\n    setLoanAmt(state.loan_amt);\n    setIntRate(state.int_rate);\n    setEmi(state.emi);\n    setTotalMoi(state.total_moi);\n    setTotalIntAmt(state.total_int_amt);\n    setSelectedTenure(state.selected_tenure);\n    setMonthSelected(state.is_month_selected);\n    setTenureYear(state.tenure_year);\n    setTenureMonth(state.tenure_month);\n    setLoanAmtSliderSelected(state.loan_amt_slider_selected);\n  }\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        <Grid container item xs={10}>\n          <Grid item className=\"home-loan-calc-widget-container\" md>\n            <h2>EMI Calculator for Home Loan</h2>\n            <LoanForm {...loan_form_props} handler={handleFormChange}/>\n            <EmiTable {...emi_props}/>\n          </Grid>\n          <Grid item className=\"home-loan-summary-container\" md>\n            <EmiPieChart {...emi_props}/>\n            <LoanSummary {...emi_props}/>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","import React from 'react';\nimport './home.css'\nimport './emi_table'\nimport Grid from '@material-ui/core/Grid';\nimport EmiTable from \"./emi_table\";\nimport EmiPieChart from \"./emi_pie_chart\";\nimport LoanSummary from \"./loan_summary\";\nimport LoanForm from \"./loan_form\";\n\nexport default function Car() {\n  const [loanAmt, setLoanAmt] = React.useState(400000);\n  const [loanAmtSliderSelected, setLoanAmtSliderSelected] = React.useState(false);\n  const [intRate, setIntRate] = React.useState(9);\n  const [monthSelected, setMonthSelected] = React.useState(false);\n  const [tenureYear, setTenureYear] = React.useState(5);\n  const [tenureMonth, setTenureMonth] = React.useState(60);\n  const [selectedTenure, setSelectedTenure] = React.useState(tenureMonth);\n  const [emi, setEmi] = React.useState(0);\n  const [totalIntAmt, setTotalIntAmt] = React.useState(0);\n  const [totalMoi, setTotalMoi] = React.useState(0);\n\n  let max_steps = 20;\n  let multiplier = 100000;\n  let loan_amt_input_value = loanAmtSliderSelected ? (loanAmt * multiplier) : loanAmt;\n  const loan_amount_marks = [];\n  for(let i=0; i <=max_steps; i=i+5) {\n    loan_amount_marks.push({\n      value: i,\n      label: i + 'L',\n    });\n  }\n\n  let emi_props = {\n    principal: loan_amt_input_value,\n    emi: emi,\n    int_rate: intRate,\n    is_month_selected: monthSelected,\n    tenure: monthSelected ? tenureMonth : tenureYear,\n    tenure_months: selectedTenure,\n    total_int_amt: totalIntAmt,\n    total_moi: totalMoi\n  };\n\n  let loan_form_props = {\n    loan_type: 'car',\n    marks: loan_amount_marks,\n    max_steps: max_steps,\n    initial_principal: loanAmt,\n    int_rate: intRate,\n    multiplier: multiplier,\n    tenure_year: tenureYear,\n    tenure_months: tenureMonth,\n    max_tenure: 7,\n    tenure_steps: [3, 0.25],\n    tenure_steps_inc: 1\n  };\n\n  function handleFormChange(state) {\n    setLoanAmt(state.loan_amt);\n    setIntRate(state.int_rate);\n    setEmi(state.emi);\n    setTotalMoi(state.total_moi);\n    setTotalIntAmt(state.total_int_amt);\n    setSelectedTenure(state.selected_tenure);\n    setMonthSelected(state.is_month_selected);\n    setTenureYear(state.tenure_year);\n    setTenureMonth(state.tenure_month);\n    setLoanAmtSliderSelected(state.loan_amt_slider_selected);\n  }\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        <Grid container item xs={10}>\n          <Grid item className=\"home-loan-calc-widget-container\" md>\n            <h2>EMI Calculator for Car Loan</h2>\n            <LoanForm {...loan_form_props} handler={handleFormChange}/>\n            <EmiTable {...emi_props}/>\n          </Grid>\n          <Grid item className=\"home-loan-summary-container\" md>\n            <EmiPieChart {...emi_props}/>\n            <LoanSummary {...emi_props}/>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","import React from 'react';\nimport './home.css'\nimport './emi_table'\nimport Grid from '@material-ui/core/Grid';\nimport EmiTable from \"./emi_table\";\nimport EmiPieChart from \"./emi_pie_chart\";\nimport LoanSummary from \"./loan_summary\";\nimport LoanForm from \"./loan_form\";\n\nexport default function Personal() {\n  const [loanAmt, setLoanAmt] = React.useState(300000);\n  const [loanAmtSliderSelected, setLoanAmtSliderSelected] = React.useState(false);\n  const [intRate, setIntRate] = React.useState(14);\n  const [monthSelected, setMonthSelected] = React.useState(false);\n  const [tenureYear, setTenureYear] = React.useState(3);\n  const [tenureMonth, setTenureMonth] = React.useState(36);\n  const [selectedTenure, setSelectedTenure] = React.useState(tenureMonth);\n  const [emi, setEmi] = React.useState(0);\n  const [totalIntAmt, setTotalIntAmt] = React.useState(0);\n  const [totalMoi, setTotalMoi] = React.useState(0);\n\n  let max_steps = 20;\n  let multiplier = 100000;\n  let loan_amt_input_value = loanAmtSliderSelected ? (loanAmt * multiplier) : loanAmt;\n  const loan_amount_marks = [];\n  for (let i = 0; i <= max_steps; i = i + 5) {\n    loan_amount_marks.push({\n      value: i,\n      label: i + 'L',\n    });\n  }\n\n  let emi_props = {\n    principal: loan_amt_input_value,\n    emi: emi,\n    int_rate: intRate,\n    is_month_selected: monthSelected,\n    tenure: monthSelected ? tenureMonth : tenureYear,\n    tenure_months: selectedTenure,\n    total_int_amt: totalIntAmt,\n    total_moi: totalMoi\n  };\n\n  let loan_form_props = {\n    loan_type: 'personal',\n    marks: loan_amount_marks,\n    max_steps: max_steps,\n    initial_principal: loanAmt,\n    int_rate: intRate,\n    multiplier: multiplier,\n    tenure_year: tenureYear,\n    tenure_months: tenureMonth,\n    max_tenure: 5,\n    tenure_steps: [3, 0.25],\n    tenure_steps_inc: 1\n  };\n\n  function handleFormChange(state) {\n    setLoanAmt(state.loan_amt);\n    setIntRate(state.int_rate);\n    setEmi(state.emi);\n    setTotalMoi(state.total_moi);\n    setTotalIntAmt(state.total_int_amt);\n    setSelectedTenure(state.selected_tenure);\n    setMonthSelected(state.is_month_selected);\n    setTenureYear(state.tenure_year);\n    setTenureMonth(state.tenure_month);\n    setLoanAmtSliderSelected(state.loan_amt_slider_selected);\n  }\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        <Grid container item xs={10}>\n          <Grid item className=\"home-loan-calc-widget-container\" md>\n            <h2>EMI Calculator for Personal Loan</h2>\n            <LoanForm {...loan_form_props} handler={handleFormChange}/>\n            <EmiTable {...emi_props}/>\n          </Grid>\n          <Grid item className=\"home-loan-summary-container\" md>\n            <EmiPieChart {...emi_props}/>\n            <LoanSummary {...emi_props}/>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Home from \"./home\";\nimport Car from \"./car\";\nimport Personal from \"./personal\";\n\nfunction TabPanel(props) {\n  const {children, value, index, ...other} = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-force-tabpanel-${index}`}\n      aria-labelledby={`scrollable-force-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-force-tab-${index}`,\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function TopMenu() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          scrollButtons=\"on\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"loan calculators\"\n          centered\n        >\n          <Tab label=\"Home Loan\" {...a11yProps(0)}/>\n          <Tab label=\"Car Loan\" {...a11yProps(1)} />\n          <Tab label=\"Personal Loan\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <Home/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Car/>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <Personal/>\n      </TabPanel>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport TopMenu from './components/menu';\n\nfunction App() {\n  return (\n    <div>\n      <header className=\"App-header\">EMI Calculator</header>\n      <TopMenu/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}